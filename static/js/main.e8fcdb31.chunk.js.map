{"version":3,"sources":["data/decoder.js","data/index.js","tooling/debounce.js","effects/on-typing.js","effects/on-searchresults.js","effects/on-initialload.js","components/Logo/index.js","components/SearchInput/index.js","components/Tags/index.js","App.js","index.js"],"names":["apiResponseDecoder","object","items","array","author","string","author_id","date_taken","link","tags","media","m","title","parseSearchResults","response","updateSearchResults","result","_r","type","correctApiResponse","value","map","r","split","thumbnail","debouncedSearch","func","wait","immediate","arguments","length","undefined","timeout","_len","args","Array","_key","callNow","clearTimeout","setTimeout","apply","debounce","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","searchTerm","search","obj","q","_args","wrap","_context","prev","next","trim","abrupt","format","querystring","jsonp","concat","name","err","data","e","stop","this","on_typing","on_searchresults","searchResults","updateEmptyResults","on_initialload","updateOnline","window","navigator","onLine","handleNetworkChange","addEventListener","Logo","_ref$closed","closed","react_default","createElement","className","classnames","xmlns","viewBox","fill","d","cx","cy","strokeWidth","SearchInput","onChange","_ref$badState","badState","_ref$disabled","disabled","input","useRef","_useState","useState","_useState2","slicedToArray","initialLoad","updateInitialLoad","useEffect","HTMLInputElement","focus","id","search-input--bad-state","aria-label","ref","el","placeholder","maxLength","Tags","props","tagsList","_props$maxLength","handler","showMore","updateShowMore","len","renderMoreButton","slice","tag","onClick","key","App","updateSearchTerm","searchState","_useState3","_useState4","emptyResults","_useState5","_useState6","online","header","onTypingEffect","onSearchResultsEffect","onInitialLoadEffect","App-header-results","components_Logo","components_SearchInput","event","currentTarget","authorMatch","match","dateString","formatDate","parseDate","href","target","rel","src","alt","components_Tags","HTMLElement","scrollIntoView","domRoot","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e8fcdb31.chunk.js","sourcesContent":["import { object, string, array } from 'decoders';\n\nconst apiResponseDecoder = object({\n  items: array(\n    object({\n      author: string,\n      author_id: string,\n      date_taken: string,\n      link: string,\n      tags: string,\n      media: object({ m: string }),\n      title: string,\n    }),\n  ),\n});\n\nexport { apiResponseDecoder };\n","import * as querystring from 'querystring';\nimport jsonp from 'jsonp';\nimport type {\n  Result, Annotation, ApiResponse, SearchRecord,\n} from './types';\n\nimport { apiResponseDecoder } from './decoder';\nimport debounce from '../tooling/debounce';\n\ntype ApiResult = Result<Annotation, ApiResponse>;\n\nconst mapApiResponseToSearchRecords = (apiResponse: ApiResponse) => {\n  const records: SearchRecord[] = apiResponse.items.map(r => ({\n    author: r.author,\n    author_id: r.author_id,\n    date_taken: r.date_taken,\n    link: r.link,\n    tags: r.tags.split(' '),\n    thumbnail: r.media.m,\n    title: r.title,\n  }));\n  return records;\n};\n\nconst parseSearchResults = (response, updateSearchResults) => {\n  /* eslint-disable no-underscore-dangle */\n  const result: ApiResult = apiResponseDecoder(response)._r;\n  /* eslint-enable no-underscore-dangle */\n\n  if (result.type === 'Ok') {\n    const correctApiResponse: ApiResponse = result.value;\n    const searchRecords: SearchRecord[] = mapApiResponseToSearchRecords(\n      correctApiResponse,\n    );\n    updateSearchResults(searchRecords);\n  } else {\n    updateSearchResults([]);\n  }\n};\n\nconst doSearch = async (\n  searchTerm: string = '',\n  updateSearchResults: Function,\n) => {\n  const search = searchTerm.trim();\n  if (search.length === 0) {\n    return;\n  }\n\n  const url = 'https://www.flickr.com/services/feeds/photos_public.gne';\n\n  const obj = {\n    format: 'json',\n    tags: search,\n  };\n  const q = querystring.encode(obj);\n\n  try {\n    jsonp(\n      `${url}?${q}`,\n      { name: 'jsonFlickrFeed' },\n      (err, data) => {\n        if (err) {\n          updateSearchResults([]);\n          return;\n        }\n        parseSearchResults(data, updateSearchResults);\n        // updateSearchResults(data.items);\n      },\n      { timeout: 10000 },\n    );\n  } catch (e) {\n    updateSearchResults([]);\n  }\n};\n\nconst debouncedSearch = debounce(doSearch, 250);\n\nexport { debouncedSearch };\n","// @flow\n\nexport default (func: Function, wait: number, immediate : boolean = false) => {\n  let timeout = null;\n\n  return (...args: any[]) => {\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func(...args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n\n    clearTimeout(timeout);\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func(...args);\n    }\n  };\n};\n","import { debouncedSearch } from '../data';\n\nexport default (searchTerm: string, updateSearchResults: any[] => void) => () => {\n  debouncedSearch(searchTerm, updateSearchResults);\n};\n","export default (\n  searchTerm: string,\n  searchResults: any[],\n  updateEmptyResults: boolean => void,\n) => () => {\n  if (searchTerm.trim().length !== 0 && searchResults.length === 0) {\n    updateEmptyResults(true);\n  } else {\n    updateEmptyResults(false);\n  }\n};\n","export default (updateOnline: boolean => void) => () => {\n  updateOnline(window.navigator.onLine);\n\n  const handleNetworkChange = () => {\n    updateOnline(window.navigator.onLine);\n  };\n\n  window.addEventListener('online', handleNetworkChange, false);\n  window.addEventListener('offline', handleNetworkChange, false);\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport './style.css';\n\ntype LogoProps = {\n  closed?: boolean\n};\n\nconst Logo = ({ closed = false }: LogoProps) => (\n  <svg\n    className={classnames('logo', { closed })}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 32 32\"\n  >\n    <path\n      fill=\"hsla(220, 13%, 5%, 0.75)\"\n      d=\"M11 5C9.032 5 7.46 6.44 7.125 8.313c-1.89.476-3.53 1.705-4.25 3.656h-.03L.718 17.936C.265 18.863 0 19.904 0 21c0 3.854 3.146 7 7 7 3.472 0 6.365-2.552 6.906-5.875.543.535 1.28.875 2.094.875.814 0 1.55-.34 2.094-.875C18.634 25.448 21.528 28 25 28c3.854 0 7-3.146 7-7 0-.974-.2-1.906-.563-2.75l-2.28-6.375-.032-.03v-.033c-.73-1.77-2.348-3.012-4.25-3.5C24.54 6.442 22.968 5 21 5c-1.857 0-3.362 1.285-3.813 3h-2.375c-.45-1.715-1.955-3-3.812-3zm0 2c1.19 0 2 .81 2 2v1h6V9c0-1.19.81-2 2-2s2 .81 2 2v.906l.906.094c1.486.156 2.766 1.192 3.344 2.53.01.022.022.042.03.064l.75 2.125c-.918-.446-1.944-.72-3.03-.72-2.924 0-5.425 1.817-6.47 4.375C17.996 17.545 17.054 17 16 17c-1.053 0-1.995.544-2.53 1.375C12.424 15.817 9.923 14 7 14c-1.072 0-2.09.253-3 .688l.75-2.032v-.03c.58-1.55 1.808-2.464 3.344-2.626L9 9.906V9c0-1.19.81-2 2-2zm-4 9c2.773 0 5 2.227 5 5s-2.227 5-5 5-5-2.227-5-5c0-.708.175-1.36.438-1.97.016-.037.013-.086.03-.124C3.26 17.192 4.98 16 7 16zm18 0c2.773 0 5 2.227 5 5s-2.227 5-5 5-5-2.227-5-5 2.227-5 5-5zm-9 3c.564 0 1 .436 1 1 0 .564-.436 1-1 1-.564 0-1-.436-1-1 0-.564.436-1 1-1z\"\n    />\n    <circle\n      className=\"logo-circle-eye\"\n      cx=\"7\"\n      cy=\"21\"\n      r=\"3\"\n      strokeWidth=\"0\"\n      fill=\"#0063DC\"\n    />\n    <circle\n      className=\"logo-circle-eye\"\n      cx=\"25\"\n      cy=\"21\"\n      r=\"3\"\n      strokeWidth=\"0\"\n      fill=\"#FF0084\"\n    />\n  </svg>\n);\n\nexport default Logo;\n","import React, { useRef, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport './style.css';\n\ntype SearchInputProps = {|\n  value: string,\n  onChange: Function,\n  badState?: boolean,\n  disabled?: boolean\n|};\n\ntype InputRef = {| current: null |} | HTMLInputElement | null;\n\nconst SearchInput = ({\n  value,\n  onChange,\n  badState = false,\n  disabled = false,\n}: SearchInputProps) => {\n  let input: InputRef = useRef(null);\n\n  const [initialLoad, updateInitialLoad] = useState(true);\n\n  useEffect(() => {\n    if (input instanceof HTMLInputElement && initialLoad) {\n      input.focus();\n      updateInitialLoad(false);\n    }\n  }, [initialLoad]);\n\n  return (\n    <div className=\"search-input-container\">\n      <div>\n        <input\n          type=\"search\"\n          id=\"search-input\"\n          className={classnames('search-input', {\n            'search-input--bad-state': !!badState,\n          })}\n          name=\"q\"\n          aria-label=\"Search flickr\"\n          ref={(el) => { (input = el); }}\n          placeholder=\"Search flickr\"\n          maxLength={50}\n          value={disabled ? 'search offline' : value}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, { useState } from 'react';\n\nimport './style.css';\n\ntype TagsProps = {\n  tagsList: string[],\n  maxLength?: number,\n  handler: Function,\n  title: string\n};\n\nconst Tags = (props: TagsProps) => {\n  const {\n    tagsList, maxLength = 20, handler, title,\n  } = props;\n\n  const [showMore, updateShowMore] = useState(true);\n\n  const len = tagsList.length;\n\n  const renderMoreButton = len > maxLength && showMore;\n\n  return (\n    <div>\n      {tagsList.slice(0, renderMoreButton ? maxLength : len).map(tag => (\n        <button\n          className=\"tag-button\"\n          type=\"button\"\n          title={`Search for '${tag}'`}\n          onClick={() => handler(tag)}\n          key={tag}\n        >\n          {tag}\n        </button>\n      ))}\n      {renderMoreButton && (\n        <button\n          className=\"tag-button\"\n          type=\"button\"\n          title={`Show more tags for '${title}'`}\n          onClick={() => {\n            updateShowMore(false);\n          }}\n        >\n          {'{ more tags.. }'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Tags;\n","// @flow\n\nimport React, { useEffect, useState, useRef } from 'react';\n\nimport classnames from 'classnames';\n\nimport { parse as parseDate, format as formatDate } from 'date-fns';\n\nimport './App.css';\n\nimport onTypingEffect from './effects/on-typing';\nimport onSearchResultsEffect from './effects/on-searchresults';\nimport onInitialLoadEffect from './effects/on-initialload';\n\nimport Logo from './components/Logo';\nimport SearchInput from './components/SearchInput';\nimport Tags from './components/Tags';\n\nimport type { SearchRecord } from './data/types';\n\ntype HeaderRef = {| current: null |} | HTMLElement | null;\n\nfunction App() {\n  const [searchTerm, updateSearchTerm] = useState('');\n\n  const searchState = useState([]);\n  const searchResults: Array<SearchRecord> = searchState[0];\n  const updateSearchResults: (Array<SearchRecord> => void) = searchState[1];\n\n  const [emptyResults, updateEmptyResults] = useState(false);\n  const [online, updateOnline] = useState(true);\n\n  let header: HeaderRef = useRef(null);\n\n  useEffect(onTypingEffect(searchTerm, updateSearchResults), [searchTerm]);\n  useEffect(\n    onSearchResultsEffect(searchTerm, searchResults, updateEmptyResults),\n    [searchResults],\n  );\n  useEffect(onInitialLoadEffect(updateOnline), []);\n\n  return (\n    <div className=\"App\">\n      <h1>Lorgnette | flickr public search</h1>\n      <header\n        className={classnames('App-header', {\n          'App-header-results': searchResults.length > 0,\n        })}\n        ref={(el) => { (header = el); }}\n      >\n        <div className=\"App-lockup\">\n          <Logo closed={!online} />\n          <SearchInput\n            value={searchTerm}\n            onChange={(event) => {\n              if (event.currentTarget instanceof HTMLInputElement) {\n                if (window.navigator.onLine === false) {\n                  updateOnline(false);\n                } else {\n                  updateSearchTerm(event.currentTarget.value);\n                }\n              }\n            }}\n            badState={emptyResults}\n            disabled={!online}\n          />\n        </div>\n      </header>\n      <main className=\"search-results\">\n        <ul>\n          {searchResults.map((result) => {\n            const authorMatch = result.author.match(/\"([^\"]+)\"/);\n            let author = 'flickr user';\n            if (authorMatch && typeof authorMatch[1] === 'string') {\n              author = authorMatch[1];\n            }\n            const dateString = formatDate(\n              parseDate(result.date_taken),\n              'MMMM D YYYY',\n            );\n            return (\n              <li key={result.thumbnail}>\n                <ul className=\"result-details\">\n                  <li className=\"result-thumbnail\">\n                    <a\n                      href={result.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      title={`View image \"${result.title}\"`}\n                    >\n                      <img src={result.thumbnail} alt={result.title} />\n                    </a>\n                  </li>\n                  <li>\n                    by\n                    {' '}\n                    <a\n                      href={`https://www.flickr.com/photos/${\n                        result.author_id\n                      }/`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {author}\n                    </a>\n                    {' '}\n                    on\n                    {' '}\n                    {dateString}\n                  </li>\n                  <li>\n                    <Tags\n                      title={result.title}\n                      tagsList={result.tags}\n                      maxLength={10}\n                      handler={(tag) => {\n                        if (!window.navigator.onLine) {\n                          return;\n                        }\n                        if (header instanceof HTMLElement) {\n                          header.scrollIntoView();\n                        }\n                        updateSearchTerm(tag);\n                      }}\n                    />\n                  </li>\n                  <li>\n                    <a\n                      href={result.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {result.link}\n                    </a>\n                  </li>\n                </ul>\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// @flow\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nconst domRoot = document.getElementById('root');\n\nif (domRoot !== null) {\n  ReactDOM.render(<App />, domRoot);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}